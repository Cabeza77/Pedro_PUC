Visualisation of phantom output

Dump files

That's what splash is for! Use ssplash to look at the dump files produced by phantom, e.g.:

ssplash dump_0*

For more detailed analysis of Phantom dump files, write yourself an analysis module for the phantomanalysis utility as described below. Analysis modules exist for many common tasks, including interpolating to a 3D grid (both fixed and AMR), computing PDFs, structure functions and power spectra, getting disc surface density profiles, and converting to other formats, and it is simple to write your own.


Global quantities

The .ev files, which are just ascii files containing global quantities as a function of time, can be visualised using asplash with the -ev (or -e) option:

asplash -e dump*.ev

where to label the columns properly, set the following environment variable:

export ASPLASH_COLUMNSFILE=~/phantom/scripts/columns

Global quantities not in the .ev file can also be obtained using the splash calc utility, e.g.:

ssplash calc max dump_0*

which produces a file containing the maximum of each quantity in the dump files as a function of time.


Customised analysis

Reading phantom dump files

The short answer is, do not under any circumstances attempt to do this yourself! (If you need convincing, just have a quick look at how long the read_data_sphNG.f90 file in splash is). The best way to read/analyse phantom dumps, aside from using splash to visualise them, is to use the phantomanalysis utility, see below.

Phantomanalysis

Compile the phantomanalysis utility using:

make analysis

which compiles the phantomanalysis binary using the analysis module you specified in phantom/build/Makefile:

ifeq ($(SETUP), isodisc)
    ...
    LINKLIST= linklist_cyl.F90
    SETUPFILE= setup_disc.f90
    ANALYSIS= analysis_disc.f90
    ...

giving

$ ls
phantomanalysis*

Phantomanalysis is a simple wrapper that reads all of the dump files on the command line in sequence and calls the analysis routine specified in the analysis_blah.f90 module.

You can then write an analysis_blah.f90 to do whatever it is you want, even if you what you want is:
- something completely trivial (see for example analysis_dtheader.f90 which just compares the time from each dump file with the time in the previous dump file); or
- conversion to another format; or
- actually performing some analysis (e.g. analysis_disc.f90 which bins particles into rings for comparison with 1D alpha-disc evolution calculations).

The call to analysis passes the most useful information on the particles (positions, velocities, thermal energy, particle masses and numbers of particles). Any remaining information can also be accessed via the usual phantom modules. For example, you can access sink particle arrays using:

use part, only:xyzmh_ptmass,vxyz_ptmass

For a list of pre-built analysis tools, see the list of Phantom utilities.

Converting to another format

Apart from writing a short analysis module, you can also use the convert utility in splash. For example, to convert all files to ascii format (not recommended, they'll be huge):

ssplash to ascii blast_0*

To avoid precision loss, you will need to ensure that splash is compiled in double precision (use make DOUBLEPRECISION=yes when compiling splash)
